@model ArticleIndexViewModel
@using VivesRental.Domains.Enums
@using VivesRental.Models.Article
@{
    ViewData["Title"] = "Artikelen";
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Sluiten"></button>
    </div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Sluiten"></button>
    </div>
}

<h1 class="mb-4">Artikelen</h1>

<form method="get" asp-action="Index" class="row mb-4">
    <div class="col-md-6">
        <input type="text" name="searchTerm" value="@Model.SearchTerm" class="form-control" placeholder="Zoek op productnaam" />
    </div>
    <div class="col-md-2">
        <button type="submit" class="btn btn-primary">
            <i class="bi bi-search"></i> Zoek
        </button>
    </div>
    <div class="col-md-4 text-end">
        <a asp-action="Create" class="btn btn-success">
            <i class="bi bi-plus-lg"></i> Nieuw Artikel
        </a>
    </div>
</form>

<table class="table table-striped table-hover align-middle">
    <thead class="table-dark">
        <tr>
            <th>Product</th>
            <th>Status</th>
            <th class="text-center">Acties</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var article in Model.Articles)
        {
            <tr>
                <td>@article.Product?.Name</td>
                <td>
                    <span class="badge @GetBadgeClass(article.Status)">
                        @GetStatusName(article.Status)
                    </span>
                </td>
                <td class="text-center">
                    <a asp-action="Edit" asp-route-id="@article.Id" class="btn btn-sm btn-outline-primary me-1" title="Bewerk">
                        <i class="bi bi-pencil"></i> Bewerk
                    </a>
                    <a asp-action="Details" asp-route-id="@article.Id" class="btn btn-sm btn-outline-info me-1" title="Details">
                        <i class="bi bi-eye"></i> Details
                    </a>
                    <a asp-action="Delete" asp-route-id="@article.Id" class="btn btn-sm btn-outline-danger" title="Verwijder">
                        <i class="bi bi-trash"></i> Verwijder
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.TotalPages > 1)
{
    <nav aria-label="Paginatie">
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-page="@i"
                       asp-route-searchTerm="@Model.SearchTerm">@i</a>
                </li>
            }
        </ul>
    </nav>
}

@functions {
    string GetBadgeClass(ArticleStatus status)
    {
        return status switch
        {
            ArticleStatus.Beschikbaar => "bg-success",
            ArticleStatus.Verhuurd => "bg-warning text-dark",
            ArticleStatus.Gereserveerd => "bg-info text-dark",
            ArticleStatus.Kapot => "bg-danger",
            _ => "bg-secondary"
        };
    }

    string GetStatusName(ArticleStatus status)
    {
        return status switch
        {
            ArticleStatus.Beschikbaar => "Beschikbaar",
            ArticleStatus.Verhuurd => "Verhuurd",
            ArticleStatus.Gereserveerd => "Gereserveerd",
            ArticleStatus.Kapot => "Kapot",
            _ => "Onbekend"
        };
    }
}
