@model VivesRental.Domains.EntitiesDB.Article
@using VivesRental.Domains.Enums

@{
    ViewData["Title"] = "Artikeldetails";
}

<h1 class="mb-4">Artikeldetails</h1>

<div class="card shadow-sm mb-4" style="max-width: 500px;">
    <div class="card-body">
        <h5 class="card-title">@Model.Product?.Name</h5>
        <p class="card-text">
            <strong>Status:</strong> <span class="badge
            @GetBadgeClass(Model.Status)">
                @GetStatusName(Model.Status)
            </span>
        </p>
        <p class="card-text"><strong>Artikel ID:</strong> @Model.Id</p>
    </div>
</div>

<a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary me-2">
    <i class="bi bi-pencil"></i> Bewerk
</a>
<a asp-action="Index" class="btn btn-secondary">Terug naar overzicht</a>

@functions {
    string GetStatusName(VivesRental.Domains.Enums.ArticleStatus status)
    {
        return status switch
        {
            VivesRental.Domains.Enums.ArticleStatus.Beschikbaar => "Beschikbaar",
            VivesRental.Domains.Enums.ArticleStatus.Verhuurd => "Verhuurd",
            VivesRental.Domains.Enums.ArticleStatus.Gereserveerd => "Gereserveerd",
            VivesRental.Domains.Enums.ArticleStatus.Kapot => "Kapot",
            _ => "Onbekend"
        };
    }

    string GetBadgeClass(VivesRental.Domains.Enums.ArticleStatus status) =>
        status switch
        {
            VivesRental.Domains.Enums.ArticleStatus.Beschikbaar => "bg-success",
            VivesRental.Domains.Enums.ArticleStatus.Verhuurd => "bg-warning text-dark",
            VivesRental.Domains.Enums.ArticleStatus.Gereserveerd => "bg-info text-dark",
            VivesRental.Domains.Enums.ArticleStatus.Kapot => "bg-danger",
            _ => "bg-secondary"
        };
}
