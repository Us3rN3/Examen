@model VivesRental.Domains.EntitiesDB.Article
@using VivesRental.Domains.Enums

@{
    ViewData["Title"] = "Artikel verwijderen";
}

<h1 class="mb-4 text-danger">Artikel verwijderen</h1>

<div class="alert alert-warning" role="alert">
    Ben je zeker dat je dit artikel wilt verwijderen?
</div>

<dl class="row mb-4">
    <dt class="col-sm-4">Product</dt>
    <dd class="col-sm-8">@Model.Product?.Name</dd>

    <dt class="col-sm-4">Status</dt>
    <dd class="col-sm-8">
        <span class="badge
            @GetBadgeClass(Model.Status)">
            @GetStatusName(Model.Status)
        </span>
    </dd>

    <dt class="col-sm-4">Artikel ID</dt>
    <dd class="col-sm-8">@Model.Id</dd>
</dl>

<form asp-action="Delete" method="post">
    <input type="hidden" asp-for="Id" />
    <button type="submit" class="btn btn-danger me-2">
        <i class="bi bi-trash"></i> Verwijder
    </button>
    <a asp-action="Index" class="btn btn-secondary">Annuleren</a>
</form>

@functions {
    string GetStatusName(ArticleStatus status)
    {
        return status switch
        {
            ArticleStatus.Beschikbaar => "Beschikbaar",
            ArticleStatus.Verhuurd => "Verhuurd",
            ArticleStatus.Gereserveerd => "Gereserveerd",
            ArticleStatus.Kapot => "Kapot",
            _ => "Onbekend"
        };
    }

    string GetBadgeClass(ArticleStatus status) =>
        status switch
        {
            ArticleStatus.Beschikbaar => "bg-success",
            ArticleStatus.Verhuurd => "bg-warning text-dark",
            ArticleStatus.Gereserveerd => "bg-info text-dark",
            ArticleStatus.Kapot => "bg-danger",
            _ => "bg-secondary"
        };
}
