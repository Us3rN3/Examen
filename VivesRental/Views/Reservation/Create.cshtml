@using VivesRental.Domains.EntitiesDB
@using VivesRental.Models.Reservation
@model CreateReservationViewModel

@{
    ViewData["Title"] = "Artikel reserveren";
    var customers = ViewBag.Customers as List<Customer> ?? new List<Customer>();
    var products = ViewBag.Products as List<Product> ?? new List<Product>();

}

<h1>Artikel reserveren</h1>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">
        @TempData["Error"]
    </div>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

<form asp-action="Create" method="post">
    <div class="form-group">
        <label for="CustomerId">Klant</label>
        <select asp-for="CustomerId" class="form-control">
            <option disabled value="">-- Kies een klant --</option>
            @foreach (var customer in customers)
            {
                <option value="@customer.Id" selected="@(Model.CustomerId == customer.Id)">
                    @customer.FirstName @customer.LastName
                </option>
            }
        </select>

    </div>

    <div class="form-group">
        <label for="ProductId">Product</label>
        <select asp-for="ProductId" class="form-control">
            <option disabled value="">-- Kies een product --</option>
            @foreach (var product in products)
            {
                <option value="@product.Id" selected="@(Model.ProductId == product.Id)">
                    @product.Name
                </option>
            }
        </select>

    </div>

    <div class="form-group">
        <label for="FromDateTime">Van</label>
        <input asp-for="FromDateTime" type="date" class="form-control" />
        <span asp-validation-for="FromDateTime" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="UntilDateTime">Tot</label>
        <input asp-for="UntilDateTime" type="date" class="form-control" />
        <span asp-validation-for="UntilDateTime" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary mt-3">Reserveer</button>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
